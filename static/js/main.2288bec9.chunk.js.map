{"version":3,"sources":["MainContext.jsx","styles/index.js","helpers/instruments.js","helpers/useSong.js","contexts/PlayContext.jsx","components/Note.jsx","components/TrackModal.jsx","helpers/useClickOutside.js","components/TrackRowController.jsx","components/TrackRow.jsx","helpers/usePlay.js","components/ChangeInstrumentModal.jsx","components/TrackPlayer.jsx","components/Modal.jsx","components/SelectInput.jsx","components/BpmModal.jsx","components/InfoModal.jsx","components/ControlBar.jsx","App.js","index.js"],"names":["MainContext","createContext","MainProvider","props","useState","tracks","setTracks","bps","stepLength","addRow","options","setOptions","currentFilter","setCurrentFilter","contextValue","addTrack","instrumentName","newTrack","id","uuidv4","instrument","rowDisplay","filter","delay","rows","CMajorScale","j","notes","i","note","pitch","octave","duration","row","order","active","push","prev","console","log","updateTrack","trackID","updatedTrack","updateTrackIndex","findIndex","track","updatedTracks","removeTracks","trackId","removeTrack","Provider","value","children","colors","background","primaryDark","secondary","panel","panelDarker","bar","button","primary","optional","optional2","optional3","metronome","metronomeBorder","font","blue","teal","red","purple","green","orange","pink","InstrumentType","getInstrument","instruments","find","name","getInstrumentsByType","instrumentType","type","sound","Tone","urls","C2","baseUrl","useSong","useContext","PlayContext","on","PlayProvider","loop","setLoop","currentStep","setCurrentStep","playCallback","time","step","forEach","synth","toDestination","currentNote","triggerAttackRelease","useEffect","callback","interval","play","a","stop","setupSong","start","contextValues","pause","NoteWrapper","styled","div","onStep","Note","toggleNote","onClick","className","TrackModalWrapper","trackColor","TrackModal","removeTracksHandler","onMouseDown","e","stopPropagation","src","alt","useClickOutside","handler","domNode","useRef","maybeHandler","event","current","contains","target","document","addEventListener","removeEventListener","TrackController","TrackRowController","isCollapsed","setIsCollapsed","setEditTrack","showTrackModal","setShowTrackModal","ref","TrackRowWrapper","NotesWrapper","Notes","barLength","TrackRow","changedNote","updatedNotes","map","usePlay","ModalWrapper","ModalContainer","InstrumentWrapper","instrumentColor","ChangeInstrumentModal","show","handleClose","handleChange","newVersion","changedInstrument","TrackPlayerContainer","TrackPlayer","editTrack","alert","Modal","setShowModal","handleAddTrack","SelectInputWrapper","selectorHeight","SelectInputOption","Selector","offset","SelectInput","selectedIndex","setSelectedIndex","option","index","length","BpmModal","lengthOptions","indexOf","selectedBarsIndex","setSelectedBarsIndex","Math","round","min","max","onChange","hz","bpmConverter","InfoModal","href","rel","Header","On","check","Off","ControlPanel","AddTrack","ControlBar","showModal","isPlay","setIsPlay","showBpmModal","setShowBpmModal","showInfoModal","setShowInfoModal","AppWrapper","FakeSidebar","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2288bec9.chunk.js","sourcesContent":["import React, { useState, createContext } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nexport const MainContext = createContext();\n\nexport const MainProvider = (props) => {\n  const [tracks, setTracks] = useState([]);\n  const [options, setOptions] = useState({\n    bps: 2,\n    stepLength: 16,\n    addRow: 1,\n    \n  });\n  //for testing filter if works move to options\n  const [currentFilter, setCurrentFilter] = useState(400);\n\n  const addTrack = (instrumentName) => {\n    const newTrack = {\n      id: uuidv4(),\n      instrument: instrumentName,\n      rowDisplay: 7,\n      options: {\n        filter: 400,\n        delay: 0.5\n      }\n    };\n    const rows = [];\n\n    //*adding the maxLength instead stepLength\n    const maxLength = 64;\n    const CMajorScale = [\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\"];\n    for (let j = 0; j < 7; j++) {\n      const notes = [];\n      for (let i = 0; i < maxLength; i++) {\n        const note = {\n          pitch: CMajorScale[j],\n          octave: \"2\",\n          duration: \"5\",\n          row: j,\n          order: i,\n          active: false,\n        };\n        notes.push(note);\n      }\n      rows.push(notes);\n    }\n\n    newTrack.notes = rows;\n    setTracks((prev) => [...prev, newTrack]);\n    console.log(tracks);\n  };\n\n  \n  const updateTrack = (trackID, updatedTrack) => {\n    console.log(updatedTrack);\n    \n    const updateTrackIndex = tracks.findIndex((track) => track.id === trackID);\n    const updatedTracks = [...tracks];\n    updatedTracks[updateTrackIndex] = updatedTrack;\n    setTracks([...updatedTracks]);\n  };\n\n\n  const removeTracks = ( trackId ) => {\n    const removeTrack= tracks.filter((track)=> track.id !== trackId )\n    setTracks(removeTrack);\n  }\n\n  const contextValue = {\n    tracks,\n    setTracks,\n    addTrack,\n    updateTrack,\n    options,\n    setOptions,\n    currentFilter,\n    setCurrentFilter,\n    removeTracks\n  };\n  return (\n    <MainContext.Provider value={contextValue}>\n      {props.children}\n    </MainContext.Provider>\n  );\n};\n","const colors = {\n  background: {\n    primaryDark: \"rgb(17, 17, 17)\",\n    secondary: \"rgb(31, 31, 31)\",\n    panel: \"rgb(157, 157, 157)\",\n    panelDarker: \"rgb(36, 34, 34)\",\n    row: \"rgb(26, 25, 25)\",\n    bar:\"rgba(153, 199, 255, 0.79)\"\n  },\n  button: {\n    primary: \"rgb(153, 153, 153)\",\n    secondary: \"rgba(153, 153, 153, 0.41)\",\n    optional: \"rgb(73, 73, 73)\",\n    optional2:\"rgb(77, 68, 238)\",\n    optional3: \"rgb(101, 96, 255)\",\n    bar:\"rgba(153, 199, 255, 0.79)\",\n    metronome: \"rgb(107, 118, 239)\",\n    metronomeBorder:\"rgb(54, 60, 129)\"\n  },\n  font: {\n    primary: \"rgb(255, 255, 255)\",\n    secondary: \"rgb(194, 194, 194)\",\n    optional: \"rgb(196, 194, 240)\",\n  },\n  blue: {\n    primary: \"rgb(0, 132, 255)\",\n    secondary: \"rgb(2, 34, 115)\",\n  },\n  teal: {\n    primary: \"rgb(51, 255, 238)\",\n    secondary: \"rgb(28, 74, 71)\",\n  },\n  red: {\n    primary: \"rgb(255, 26, 5)\",\n    secondary: \"rgb(83, 24, 19)\",\n  },\n  purple: {\n    primary: \"rgb(222, 138, 255)\",\n    secondary: \"rgb(59, 42, 96)\",\n  },\n  green: {\n    primary: \"rgb(87, 255, 148)\",\n    secondary: \"rgb(19, 73, 40)\",\n  },\n\n  orange: {\n    primary: \"rgb(255, 109, 31)\",\n    secondary: \"rgb(111, 43, 6)\",\n  },\n  pink: {\n    primary: \"rgb(250, 41, 166)\",\n    secondary: \"rgb(115, 33, 82)\",\n  },\n};\n\nexport default colors;\n\nexport const sizes = {\n  headerHeight: \"4rem\",\n  assistantHeight: \"2rem\",\n  sidebarWidth: \"30ch\",\n};\n","import * as Tone from \"tone\";\nimport colors from \"../styles\";\n\nexport const InstrumentType = {\n  Synth: \"synth\",\n  Beat: \"beat\",\n};\n\n/**\n * Gets instrument object from instrument name\n * @param {string} instrumentName: Name of instrument\n * @returns Instrument object\n */\nexport const getInstrument = (instrumentName) =>\n  instruments.find((instrument) => instrument.name === instrumentName);\n\nexport const getInstrumentsByType = (instrumentType) =>\n  instruments.filter((instrument) => instrument.type === instrumentType);\n\nexport const instruments = [\n  {\n    name: \"Kick\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"Kick.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Beat,\n    colors: colors.blue,\n  },\n  {\n    name: \"Kick 2\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"Kick2.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Beat,\n    colors: colors.blue,\n  },\n  {\n    name: \"808\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"808-1.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Beat,\n    colors: colors.purple,\n  },\n  {\n    name: \"808 1\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"808-2.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Beat,\n    colors: colors.purple,\n  },\n  {\n    name: \"808 2\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"808-3.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Beat,\n    colors: colors.purple,\n  },\n  {\n    name: \"808 3\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"808-4.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Beat,\n    colors: colors.purple,\n  },\n  {\n    name: \"808 4\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"808-5.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Beat,\n    colors: colors.purple,\n  },\n  {\n    name: \"Clap\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"Clap_1.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Beat,\n    colors: colors.orange,\n  },\n  {\n    name: \"Claves\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"Claves_1.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Beat,\n    colors: colors.orange,\n  },\n  {\n    name: \"Conga\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"Conga_1.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Beat,\n    colors: colors.orange,\n  },\n  {\n    name: \"Conga 2\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"Conga 2_1.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Beat,\n    colors: colors.orange,\n  },\n  {\n    name: \"Crash\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"Crash_1.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Beat,\n    colors: colors.orange,\n  },\n  {\n    name: \"Hat\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"Hat_1.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Beat,\n    colors: colors.red,\n  },\n  {\n    name: \"Hat 2\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"Hat 2_1.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Beat,\n    colors: colors.red,\n  },\n  {\n    name: \"Shaker\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"Shaker_1.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Beat,\n    colors: colors.orange,\n  },\n  {\n    name: \"Stick\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"Stick_1.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Beat,\n    colors: colors.orange,\n  },\n  {\n    name: \"Tom\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"Tom_1.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Beat,\n    colors: colors.red,\n  },\n  {\n    name: \"Tom 2\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"Tom 2_1.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Beat,\n    colors: colors.red,\n  },\n  {\n    name: \"Triangle\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"Triangle_1.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Beat,\n    colors: colors.orange,\n  },\n  {\n    name: \"Rim\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"Rim_1.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Beat,\n    colors: colors.orange,\n  },\n  {\n    name: \"Snap\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"Snap_1.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Beat,\n    colors: colors.red,\n  },\n  {\n    name: \"Snare 1\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"Snare1_1.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Beat,\n    colors: colors.red,\n  },\n  {\n    name: \"Snare 2\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"Snare2_1.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Beat,\n    colors: colors.red,\n  },\n  {\n    name: \"Guitar 1\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"Guitar-1_1.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Synth,\n    colors: colors.teal,\n  },\n  {\n    name: \"Guitar 2\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"Guitar-2_1.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Synth,\n    colors: colors.teal,\n  },\n  {\n    name: \"Guitar 3\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"Guitar-3_1.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Synth,\n    colors: colors.teal,\n  },\n  {\n    name: \"Guitar 4\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"Guitar-4_1.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Synth,\n    colors: colors.teal,\n  },\n  {\n    name: \"Guitar 5\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"Guitar-5_1.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Synth,\n    colors: colors.teal,\n  },\n  {\n    name: \"Key\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"Key 1_1.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Synth,\n    colors: colors.green,\n  },\n  {\n    name: \"Key 2\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"Key 2_1.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Synth,\n    colors: colors.green,\n  },\n  {\n    name: \"Key 3\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"Key 3_1.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Synth,\n    colors: colors.green,\n  },\n  {\n    name: \"Key 4\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"Key 4_1.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Synth,\n    colors: colors.green,\n  },\n  {\n    name: \"Key 5\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"Key 5_1.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Synth,\n    colors: colors.green,\n  },\n  {\n    name: \"Key 6\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"Key 6_1.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Synth,\n    colors: colors.green,\n  },\n  {\n    name: \"Another One\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"ANOTHERONE_1.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Beat,\n    colors: colors.pink,\n  },\n  {\n    name: \"EWEYEAH\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"EWEYEAH_1.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Beat,\n    colors: colors.pink,\n  },\n  {\n    name: \"HA\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"HA_1.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Beat,\n    colors: colors.pink,\n  },\n  {\n    name: \"HEY\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"HEY_1.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Beat,\n    colors: colors.pink,\n  },\n  {\n    name: \"HOLDUP\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"HOLDUP_1.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 0,\n    type: InstrumentType.Beat,\n    colors: colors.pink,\n  },\n  {\n    name: \"HUH\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"HUH_1.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Beat,\n    colors: colors.pink,\n  },\n  {\n    name: \"JYEA\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"JYEA_1.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Beat,\n    colors: colors.pink,\n  },\n  {\n    name: \"UGH\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"UGH.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Beat,\n    colors: colors.pink,\n  },\n  {\n    name: \"UGH 2\",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"UGH_2.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 5,\n    type: InstrumentType.Beat,\n    colors: colors.pink,\n  },\n  {\n    name: \"YEAUH \",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"YEAUH_1.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 0,\n    type: InstrumentType.Beat,\n    colors: colors.pink,\n  },\n  {\n    name: \"GUN \",\n    sound: new Tone.Sampler({\n      urls: {\n        C2: \"GUN_1.mp3\",\n      },\n      baseUrl: \"/Media/\",\n    }),\n    octave: 0,\n    type: InstrumentType.Beat,\n    colors: colors.pink,\n  },\n];\n","import {useContext} from 'react';\nimport { MainContext } from '../MainContext';\n\nconst useSong = () => {\n    const context = useContext(MainContext)\n    return context\n}\nexport default useSong;","import React, { createContext, useState, useEffect } from \"react\";\nimport * as Tone from \"tone\";\nimport { getInstrument } from \"../helpers/instruments\";\nimport useSong from \"../helpers/useSong\";\n\nexport const PlayContext = createContext();\nlet i = 0;\nlet on = 0;\n\nexport const PlayProvider = (props) => {\n  const { tracks, options } = useSong();\n  const [loop, setLoop] = useState(null);\n  const [currentStep, setCurrentStep] = useState(0);\n\n\n  const playCallback = (time) => {\n    const step = i % options.stepLength;\n    setCurrentStep(step);\n    i++;\n    tracks.forEach((track, i) => {\n      const instrument = getInstrument(track.instrument);\n      const synth = instrument.sound.toDestination();     \n   \n      //* Find the note for this track that is supposed\n      //* to play at the current order\n\n      track.notes.forEach((row) => {\n        const currentNote = row[step];\n        if (currentNote && currentNote.active) {\n          synth.triggerAttackRelease(\n            `${currentNote.pitch}${currentNote.octave}`,\n            currentNote.duration\n          );\n        }\n      });\n    });\n\n    // condition for metronome display\n    if (i % 2) {\n      on = 0;\n    } else {\n      on = 1;\n    }\n  };\n\n  \n    \n  //* Updates the callback when values change\n  useEffect(() => {\n    if (loop) {\n      loop.callback = playCallback;\n    }\n  }, [tracks]);\n\n  useEffect(() => {\n    if (loop) {\n      loop.interval = `${options.bps}Hz`;\n    }\n  }, [options]);\n\n  const play = async () => {\n    await Tone.start();\n    if (loop) loop.stop(0);\n    // Loop\n    setupSong();\n    setLoop(new Tone.Loop(playCallback, `${options.bps}Hz`).start(0));\n    Tone.Transport.start();\n  };\n\n  const setupSong = () => {\n    i = 0;\n  };\n\n  const pause = () => {\n    Tone.Transport.stop();\n  };\n\n  const contextValues = {\n    loop,\n    setLoop,\n    currentStep,\n    setCurrentStep,\n    play,\n    pause,\n    on,\n  };\n\n  return (\n    <PlayContext.Provider value={contextValues}>\n      {props.children}\n    </PlayContext.Provider>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst NoteWrapper = styled.div`\n  background: ${(props) =>\n    props.active ? props.colors.primary : props.colors.secondary};\n  border: 1px solid\n    ${(props) => (props.onStep ? \"rgb(153, 153, 153)\" : \"transparent\")};\n  box-shadow: ${(props) =>\n    props.onStep && props.active\n      ? `0px 0px 30px ${props.colors.secondary} , -2px -2px 25px ${props.colors.primary}`\n      : \"transparent\"};\n\n\n  border-radius: 0.7rem;\n  min-height: 3.5rem;\n  width: 100%;\n  margin: 0.4rem 0.3rem 0.2rem 0;\n  cursor: pointer;\n\n\n`;\n\nexport default function Note({ note, toggleNote, currentStep, colors }) {\n  return (\n    <NoteWrapper\n      active={note.active}\n      onClick={toggleNote}\n      onStep={currentStep === note.order}\n      colors={colors}\n      className={note.active && \"active\"}\n    >\n    </NoteWrapper>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { getInstrument } from \"../helpers/instruments\";\nimport colors from \"../styles\";\n\n// #region -styling-\nconst TrackModalWrapper = styled.div`\n  background: ${colors.background.secondary};\n  right: 0.1rem;\n  height: 2.5rem;\n  top: 3.3rem;\n  border-radius: 0.2rem;\n  display: flex;\n\n  .remove-container {\n    display: grid;\n    place-items: center;\n    width: 3rem;\n    height: 100%;\n    border-radius: 0.5rem;\n    border-left: 1px solid ${(props) => props.trackColor.primary};\n    cursor: pointer;\n    & > img {\n      width: 1rem;\n      height: 1rem;\n    }\n  }\n\n  .volume-container {\n    display: flex;\n    align-items: center;\n    & > img {\n      margin: 0 0.5rem 0 1rem;\n\n      width: 1rem;\n      height: 1rem;\n    }\n\n    .slider {\n      grid-area: main;\n      justify-self: start;\n      align-self: center;\n      -webkit-appearance: none; //Override default CSS styles\n      appearance: none;\n      width: 90%; /* Full-width */\n      height: 0.1rem; /* Specified height */\n      background: ${colors.button.bar};\n      outline: none; /* Remove outline */\n      opacity: 1; /* Set transparency (for mouse-over effects on hover) */\n      -webkit-transition: 50s; /* 0.2 seconds transition on hover */\n      transition: opacity 0.2s;\n      border-radius: 0.1rem;\n    }\n\n    /* The slider handle (use -webkit- (Chrome, Opera, Safari, Edge) and -moz- (Firefox) to override default look) */\n    .slider::-webkit-slider-thumb {\n      grid-area: main;\n      justify-self: start;\n      align-self: center;\n      -webkit-appearance: none; /* Override default look */\n      appearance: none;\n      width: 1.5rem; /* Set a specific slider handle width */\n      height: 1rem; /* Slider handle height */\n      background: ${colors.button.optional2};\n      cursor: pointer; /* Cursor on hover */\n      border-radius: 0.2rem;\n    }\n\n    .slider::-moz-range-thumb {\n      grid-area: main;\n      justify-self: start;\n      align-self: center;\n      width: 1.5rem; /* Set a specific slider handle width */\n      height: 1.5rem; /* Slider handle height */\n      background: ${colors.button.optional2};\n      cursor: pointer; /* Cursor on hover */\n    }\n  }\n`;\n\n// #endregion\n\nexport default function TrackModal({ removeTracksHandler, track }) {\n  return (\n    <TrackModalWrapper\n      onMouseDown={(e) => e.stopPropagation()}\n      trackColor={getInstrument(track.instrument).colors}\n    >\n      <div\n        className=\"remove-container\"\n        onClick={() => removeTracksHandler(track.id)}\n      >\n        <img src=\"icons/remove.svg\" alt=\"remove\" />\n      </div>\n    </TrackModalWrapper>\n  );\n}\n","import { useEffect, useRef } from \"react\";\n\nconst useClickOutside = ( handler ) => {\n\n    const domNode = useRef();\n\n    useEffect(() => {\n        const maybeHandler = (event) => {\n\n            if(!domNode.current.contains(event.target)) {\n                handler();\n            };\n        }\n\n        document.addEventListener(\"mousedown\", maybeHandler)\n\n        return () => {\n            document.removeEventListener(\"mousedown\", maybeHandler);\n        };\n    });\n    \n    return domNode;\n\n}\nexport default useClickOutside;","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../styles\";\nimport {\n  getInstrument,\n  InstrumentType,\n} from \"../helpers/instruments\";\nimport useSong from \"../helpers/useSong\";\nimport TrackModal from \"./TrackModal\";\nimport useClickOutside from \"../helpers/useClickOutside\";\n\n//#region - styling -\n\nconst TrackController = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 1.5rem 0 0 0;\n  margin-bottom: 0;\n  min-width: 15rem;\n  min-height: 2rem;\n  position: relative;\n  border-radius: 0 .9rem;\n  border-bottom: 1px solid ${(props) => props.trackColor.primary};\n  \n  \n  \n  .synth-container {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    & > button {\n      all: unset;\n      background: ${colors.button.optional};\n      width: 2rem;\n      height: 1rem;\n      margin: 0.2rem;\n      font-size: 0.5em;\n      border-radius: 0.2rem;\n      text-align: center;\n    }\n\n    .change-instrument {\n      margin-left: 0.5rem;\n      cursor: pointer;\n      padding: 0 0.2rem;\n      & > select {\n        all: unset;\n        max-width: 2rem;\n      }\n      & img {\n        width: 2.5rem;\n        height: 2.5rem;\n      }\n    }\n\n    .mute {\n      margin-left: auto;\n    }\n\n    .more {\n      margin-right: 0.5rem;\n      margin-left: 0.5rem;\n      cursor: pointer;\n    }\n\n    & > span {\n      margin: 0.2rem;\n      font-size: 0.8em;\n    }\n  }\n\n  .collapse-button {\n    margin-top: auto;\n    margin-left: auto;\n    margin-bottom: 1rem;\n    margin-right: 0.3rem;\n    width: 2rem;\n    height: 1rem;\n    border-radius: 0.1rem;\n    cursor: pointer;\n    & > img {\n      width: 1rem;\n      height: 1rem;\n      margin-left: 0.5rem;\n    }\n  }\n`;\n\n// #endregion\n\nexport default function TrackRowController({\n  track,\n  isCollapsed,\n  setIsCollapsed,\n  setEditTrack\n}) {\n  const {  removeTracks } = useSong();\n  const [showTrackModal, setShowTrackModal] = useState(false);\n\n\n  // Get what this track type is\n  // const currentInstrumentType = getInstrument(track.instrument).type;\n\n  // Get all instruments of same InstrumentType\n  // const instruments = getInstrumentsByType(currentInstrumentType);\n  // const instrumentKeys = instruments.map((e) => e.name);\n\n  const removeTracksHandler = (trackId) => {\n    removeTracks(trackId);\n  };\n\n  let domNode = useClickOutside(() => {\n    setShowTrackModal(false);\n  });\n\n  return (\n    <TrackController trackColor={getInstrument(track.instrument).colors}>\n      <div className=\"synth-container\">\n        <div\n          onClick={() => setEditTrack(track)}\n          className=\"change-instrument\"\n        >\n          <img\n            src={\n              getInstrument(track.instrument).type === \"beat\"\n                ? \"icons/drum-machine.svg\"\n                : \"icons/sound.svg\"\n            }\n            alt=\"beat icon and sound icon\"\n          />\n\n        </div>\n        <span>{track.instrument}</span>\n        <div\n          className=\"more\"\n          onClick={() => setShowTrackModal(prev => !prev)}\n          ref={domNode}\n        >\n          <img src=\"icons/more.svg\" alt=\"\" />\n        </div>\n        {showTrackModal && (\n          <TrackModal removeTracksHandler={removeTracksHandler} track={track} />\n        )}\n      </div>\n\n      {getInstrument(track.instrument).type === InstrumentType.Synth && (\n        <div\n          className=\"collapse-button\"\n          onClick={() => setIsCollapsed((prev) => !prev)}\n        >\n          <img\n            src={isCollapsed ? \"icons/arrow-down.svg\" : \"icons/arrow-up.svg\"}\n            alt=\"arrow\"\n          />\n        </div>\n      )}\n    </TrackController>\n  );\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../styles\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Note from \"./Note\";\nimport {\n  getInstrument,\n  InstrumentType,\n} from \"../helpers/instruments\";\nimport TrackRowController from \"./TrackRowController\";\nimport useSong from \"../helpers/useSong\";\n\n// #region - Styling -\n\nconst TrackRowWrapper = styled.div`\n  border-radius: 0.25rem;\n  margin-bottom: 0.5rem;\n  position: relative;\n  z-index: 1;\n\n  .controller-notes-container {\n    display: flex;\n    justify-content: space-between;\n    & > div {\n    }\n  }\n\n`;\n\nconst NotesWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\n\nconst Notes = styled.div`\n  background: ${colors.background.row};\n  z-index: 0;\n  display: flex;\n  padding: 0 0 0 1rem;\n  \n  & > * {\n    margin-right: 0.5rem;\n\n    &:nth-child(${(props) => props.barLength}n) {\n      margin-right: 1rem;\n    }\n\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n`;\n\n// #endregion\n\nexport default function TrackRow({ track, currentStep, setEditTrack }) {\n  const { updateTrack, options } = useSong();\n\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const changedNote = (note) => {\n\n    const updatedNotes = track.notes;\n    updatedNotes[note.row][note.order].active =\n      !updatedNotes[note.row][note.order].active;\n\n    updateTrack(track.id, { ...track, notes: updatedNotes });\n  };\n\n  const colors = getInstrument(track.instrument).colors;\n\n\n  return (\n    <TrackRowWrapper>\n      <section className=\"controller-notes-container\">\n        <TrackRowController\n          track={track}\n          isCollapsed={isCollapsed}\n          setIsCollapsed={setIsCollapsed}\n          setEditTrack={setEditTrack}\n        />\n\n        <NotesWrapper>\n          {getInstrument(track.instrument).type === InstrumentType.Synth &&\n            track.notes.map((row, i) => (\n              <Notes barLength={4} key={`note-row__${i}`}>\n                {(!isCollapsed || (isCollapsed && i === 0)) &&\n                  row.map(\n                    (note, j) =>\n                      j < options.stepLength && (\n                        <Note\n                          note={note}\n                          toggleNote={() => changedNote(note)}\n                          currentStep={currentStep}\n                          key={uuidv4()}\n                          colors={colors}\n                        />\n                      )\n                  )}\n                  \n               \n              </Notes>\n            ))}\n\n          {getInstrument(track.instrument).type === InstrumentType.Beat &&\n            track.notes.map((row) => (\n              <Notes barLength={4}>\n                {row\n                  .filter(\n                    (note) => note.order < options.stepLength && note.row < 1\n                  )\n                  .map((note) => (\n                    <Note\n                      note={note}\n                      toggleNote={() => changedNote(note)}\n                      currentStep={currentStep}\n                      key={uuidv4()}\n                      colors={colors}\n                    />\n                  ))}\n              </Notes>\n            ))}\n        </NotesWrapper>\n      </section>\n\n      \n    </TrackRowWrapper>\n  );\n}\n","import {useContext} from 'react';\nimport { PlayContext } from '../contexts/PlayContext';\n\nconst usePlay = () => {\n    const context = useContext(PlayContext)\n    return context\n}\nexport default usePlay;","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../styles\";\nimport { getInstrumentsByType, InstrumentType } from \"../helpers/instruments\";\nimport useSong from \"../helpers/useSong\";\n\n//#region - styling -\nconst ModalWrapper = styled.div`\n  background: rgba(0, 0, 0, 0.1);\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: grid;\n  place-items: center;\n  z-index: 99;\n`;\n\nconst ModalContainer = styled.div`\n  width: 60rem;\n  min-height: 35rem;\n  background: ${colors.background.primaryDark};\n  color: white;\n  border-radius: 0.5rem;\n  & > p {\n    color: ${colors.font.secondary};\n    font-size: 2ch;\n    font-weight: bolder;\n    margin-left: 42%;\n  }\n\n  .beat-container {\n    display: flex;\n    align-content: center;\n    align-items: stretch;\n    flex-wrap: wrap;\n    border-bottom: 4px solid ${colors.background.secondary};\n    border-top: 4px solid ${colors.background.secondary};\n    & > div {\n      width: 4.5rem;\n      height: 3rem;\n      font-size: 1.4ch;\n      margin: 1rem 2rem;\n      cursor: pointer;\n      display: grid;\n      place-items: center;\n      border-radius: 0.3rem;\n    }\n  }\n\n  .synth-container {\n    display: flex;\n    align-content: center;\n    align-items: stretch;\n    flex-wrap: wrap;\n\n    & > div {\n      width: 4.5rem;\n      height: 3rem;\n      font-size: 1.4ch;\n      margin: 1rem 2rem;\n      cursor: pointer;\n      display: grid;\n      place-items: center;\n      border-radius: 0.3rem;\n    }\n  }\n`;\n\nconst InstrumentWrapper = styled.div`\n  background: ${(props) => props.instrumentColor.secondary};\n  :hover {\n    background: ${(props) => props.instrumentColor.primary};\n    transition: all 0.5s ease;\n  }\n`;\n// #endregion\nexport default function ChangeInstrumentModal({ show, track, handleClose }) {\n  const { updateTrack } = useSong();\n  if (!show) return null;\n\n  const changedInstrument = (instrument) => {\n    const newVersion = { ...track, instrument: instrument };\n    updateTrack(track.id, newVersion);\n  };\n\n  const handleChange = (instrument) => {\n    changedInstrument(instrument.name);\n    handleClose();\n  };\n\n  return (\n    <ModalWrapper onMouseDown={handleClose}>\n      <ModalContainer onMouseDown={(e) => e.stopPropagation()}>\n        <p> Change Instrument</p>\n\n        <div className=\"beat-container\">\n          {getInstrumentsByType(InstrumentType.Beat).map((instrument) => (\n            <InstrumentWrapper\n              onClick={() => handleChange(instrument)}\n              key={instrument.name}\n              instrumentColor={instrument.colors}\n            >\n              {instrument.name}\n            </InstrumentWrapper>\n          ))}\n        </div>\n        <div className=\"synth-container\">\n          {getInstrumentsByType(InstrumentType.Synth).map((instrument) => (\n            <InstrumentWrapper\n              onClick={() => handleChange(instrument)}\n              key={instrument.name}\n              instrumentColor={instrument.colors}\n            >\n              {instrument.name}\n            </InstrumentWrapper>\n          ))}\n        </div>\n      </ModalContainer>\n    </ModalWrapper>\n  );\n}\n","import React, { useEffect, useState} from \"react\";\nimport TrackRow from \"./TrackRow\";\nimport styled from \"styled-components\";\nimport useSong from \"../helpers/useSong\";\nimport usePlay from \"../helpers/usePlay\";\nimport colors from \"../styles\";\nimport ChangeInstrumentModal from \"./ChangeInstrumentModal\";\n\nconst TrackPlayerContainer = styled.div`\n  background: ${colors.background.row};\n  grid-area: body;\n  overflow: auto;\n`;\n\nexport default function TrackPlayer() {\n  const { tracks, addTrack } = useSong();\n  const { currentStep } = usePlay();\n  const [editTrack, setEditTrack] = useState(null);\n  // as a default add these\n  useEffect(() => {\n    addTrack(\"Kick\");\n    addTrack(\"Key\");\n  }, []);\n\n  return (\n    <TrackPlayerContainer>\n      {tracks &&\n        tracks.map((track) => (\n          <TrackRow\n            track={track}\n            key={track.id}\n            currentStep={currentStep}\n            setEditTrack={setEditTrack}\n          />\n        ))}\n      <ChangeInstrumentModal\n        show={!!editTrack}\n        handleClose={() => setEditTrack(null)}\n        handleChange={() => alert('Not implemented yet')}\n        track={editTrack}\n      />\n    </TrackPlayerContainer>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport useSong from \"../helpers/useSong\";\nimport colors from \"../styles\";\nimport { getInstrumentsByType, InstrumentType } from \"../helpers/instruments\";\n\n// #region - styling -\nconst ModalWrapper = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: grid;\n  place-items: center;\n  z-index: 15;\n`;\nconst ModalContainer = styled.div`\n  width: 60rem;\n  min-height: 35rem;\n  background: ${colors.background.primaryDark};\n  color: white;\n  border-radius: 0.5rem;\n  & > p {\n    color: ${colors.font.secondary};\n    font-size: 2ch;\n    font-weight: bolder;\n    margin-left: 42%;\n  }\n\n  .beat-container {\n    display: flex;\n    align-content: center;\n    align-items: stretch;\n    flex-wrap: wrap;\n    border-bottom: 4px solid ${colors.background.secondary};\n    border-top: 4px solid ${colors.background.secondary};\n    & > div {\n      width: 4.5rem;\n      height: 3rem;\n      font-size: 1.4ch;\n      margin: 1rem 2rem;\n      cursor: pointer;\n      display: grid;\n      place-items: center;\n      border-radius: 0.3rem;\n    }\n  }\n\n  .synth-container {\n    display: flex;\n    align-content: center;\n    align-items: stretch;\n    flex-wrap: wrap;\n\n    & > div {\n      width: 4.5rem;\n      height: 3rem;\n      font-size: 1.4ch;\n      margin: 1rem 2rem;\n      cursor: pointer;\n      display: grid;\n      place-items: center;\n      border-radius: 0.3rem;\n    }\n  }\n`;\nconst InstrumentWrapper = styled.div`\n  background: ${(props) => props.instrumentColor.secondary};\n  :hover {\n    background: ${(props) => props.instrumentColor.primary};\n    transition: all 0.5s ease;\n  }\n`;\n\n// #endregion\nexport default function Modal({  setShowModal }) {\n  const { addTrack } = useSong();\n\n  const handleAddTrack = (instrumentName) => {\n    addTrack(instrumentName);\n  };\n\n  return (\n    <ModalWrapper onMouseDown={() => setShowModal(false)}>\n      <ModalContainer onMouseDown={(e) => e.stopPropagation()}>\n        <p>Select Instrument</p>\n\n        <div className=\"beat-container\">\n          {getInstrumentsByType(InstrumentType.Beat).map((instrument) => (\n            <InstrumentWrapper\n              onClick={() => handleAddTrack(instrument.name)}\n              key={instrument.name}\n              instrumentColor={instrument.colors}\n            >\n              {instrument.name}\n            </InstrumentWrapper>\n          ))}\n        </div>\n        <div className=\"synth-container\">\n          {getInstrumentsByType(InstrumentType.Synth).map((instrument) => (\n            <InstrumentWrapper\n              onClick={() => handleAddTrack(instrument.name)}\n              key={instrument.name}\n              instrumentColor={instrument.colors}\n            >\n              {instrument.name}\n            </InstrumentWrapper>\n          ))}\n        </div>\n      </ModalContainer>\n    </ModalWrapper>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../styles\";\n\nconst SelectInputWrapper = styled.div`\n  background: rgb(55, 52, 52);\n  display: flex;\n  align-items: center;\n  height: 3rem;\n  width: 18rem;\n  position: relative;\n  border-radius: 0.3rem;\n  \n`;\n\nconst selectorWidth = \"7ch\";\nconst selectorHeight = \"2.2rem\";\n\nconst SelectInputOption = styled.div`\n  color: ${colors.font.secondary};\n  height: ${selectorHeight};\n  width: ${selectorWidth};\n  display: grid;\n  place-items: center;\n  z-index: 2;\n  cursor: pointer;\n`;\n\nconst Selector = styled.div`\n  position: absolute;\n  height: ${selectorHeight};\n  width: ${selectorWidth};\n  background: ${colors.button.optional3};\n  z-index: 1;\n  left: ${props => props.offset}%;\n  transition: ease 0.2s;\n  border-radius: 0.2rem;\n`;\n\nexport default function SelectInput({\n  options,\n  selectedIndex,\n  setSelectedIndex,\n  className\n}) {\n  console.log(selectedIndex);\n  return (\n    <SelectInputWrapper className={className}>\n      {options.map((option, index) => (\n        <SelectInputOption\n          key={`option-${index}`}\n          onClick={() => setSelectedIndex(index)}\n        >\n          {option}\n        </SelectInputOption>\n      ))}\n      <Selector offset={100 * (selectedIndex / options.length)} />\n    </SelectInputWrapper>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport useSong from \"../helpers/useSong\";\nimport colors from \"../styles\";\nimport SelectInput from \"./SelectInput\";\n\n// #region - styling -\n\nconst ModalWrapper = styled.div`\n  position: fixed;\n  top: 3rem;\n  right: 4rem;\n  width: 25rem;\n  height: 10rem;\n  border: 1px solid rgb(37, 37, 37);\n  border-radius: 0.4rem;\n  z-index: 10;\n  background: ${colors.background.primaryDark};\n\n  display: grid;\n  grid-template-columns: auto;\n  grid-template-rows: 1rem 4rem auto;\n  grid-template-areas:\n    \"header header header header\"\n    \"Left  main main  main \"\n    \"nameBar bar bar bar\";\n\n  .bpm-display {\n    grid-area: header;\n    justify-self: center;\n    align-self: center;\n    margin-top: 1rem;\n  }\n\n  & > span {\n    grid-area: Left;\n    justify-self: center;\n    align-self: center;\n  }\n\n  .slider {\n    grid-area: main;\n    justify-self: start;\n    align-self: center;\n    -webkit-appearance: none; //Override default CSS styles\n    appearance: none;\n    width: 85%; /* Full-width */\n    height: 0.3rem; /* Specified height */\n    background: ${colors.button.bar};\n    outline: none; /* Remove outline */\n    opacity: 1; /* Set transparency (for mouse-over effects on hover) */\n    -webkit-transition: 50s; /* 0.2 seconds transition on hover */\n    transition: opacity 0.2s;\n    border-radius: 0.1rem;\n  }\n\n  /* The slider handle (use -webkit- (Chrome, Opera, Safari, Edge) and -moz- (Firefox) to override default look) */\n  .slider::-webkit-slider-thumb {\n    grid-area: main;\n    justify-self: start;\n    align-self: center;\n    -webkit-appearance: none; /* Override default look */\n    appearance: none;\n    width: 1.5rem; /* Set a specific slider handle width */\n    height: 1.5rem; /* Slider handle height */\n    background: ${colors.button.optional2};\n    cursor: pointer; /* Cursor on hover */\n    border-radius: 0.2rem;\n  }\n\n  .slider::-moz-range-thumb {\n    grid-area: main;\n    justify-self: start;\n    align-self: center;\n    width: 2rem; /* Set a specific slider handle width */\n    height: 2rem; /* Slider handle height */\n    background: ${colors.button.optional2};\n    cursor: pointer; /* Cursor on hover */\n  }\n\n  .bpm-select {\n    grid-area: bar;\n    align-self: center;\n  }\n\n  .name-bars {\n    grid-area: nameBar;\n    /* background: blue; */\n    justify-self: center;\n    margin-right: 0.2rem;\n    margin-left: 0.4rem;\n  }\n`;\n\n// #endregion\n\nexport default function BpmModal() {\n  const { options, setOptions } = useSong();\n  const lengthOptions = [\"4\", \"8\", \"16\", \"24\"];\n  const [selectedBarsIndex, setSelectedBarsIndex] = useState(\n    lengthOptions.indexOf(`${options.stepLength}`)\n  );\n\n  const bpmConverter = (e) => {\n    const bpm = e.target.value;\n    const hz = bpm / 60;\n    console.log(hz, \"hz is \");\n\n    setOptions({ ...options, bps: hz });\n  };\n\n  useEffect(() => {\n    setOptions({ ...options, stepLength: lengthOptions[selectedBarsIndex] });\n  }, [selectedBarsIndex]);\n\n  return (\n    <ModalWrapper onMouseDown={(e) => e.stopPropagation()}>\n      <div className=\"bpm-display\">{Math.round(options.bps * 60)}</div>\n\n      <span>BPM</span>\n\n      <input\n        type=\"range\"\n        min=\"70\"\n        max=\"150\"\n        className=\"slider\"\n        value={options.bps * 60}\n        onChange={(e) => bpmConverter(e)}\n      />\n\n      <SelectInput\n        options={lengthOptions}\n        selectedIndex={selectedBarsIndex}\n        setSelectedIndex={setSelectedBarsIndex}\n        className=\"bpm-select\"\n      />\n      <span className=\"name-bars\">BARS</span>\n    </ModalWrapper>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../styles\";\n\nconst ModalWrapper = styled.div`\n  \n  background: rgba(0, 0, 0, 0.674);\n  width: 14rem;\n  height: 93%;\n  position: fixed;\n  top: 4rem;\n  right: 0.1rem;\n  border: 1px solid rgb(37, 37, 37);\n  border-radius: 0.5rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  margin: 0;\n  & > div {\n    background: ${colors.button.secondary};\n    width: 4rem;\n    height: 3rem;\n    border-radius: 0.5rem;\n    display: grid;\n    place-items: center;\n    :hover {\n      background: ${colors.button.optional3};\n      transition: all 0.5s ease-in-out;\n    }\n  }\n  & > p {\n    padding: 1rem;\n    font-size: 1.8ch;\n\n    :last-child {\n      padding: 0;\n      font-size: 1.3ch;\n    }\n    & > h3 {\n      margin: 0;\n    }\n  }\n`;\n\nexport default function InfoModal() {\n  return (\n    <ModalWrapper onMouseDown={(e) => e.stopPropagation()}>\n      <p>\n        Hi there, <br />{\" \"}\n        <h3>\n          I’m <strong>Samitone,</strong>\n        </h3>{\" \"}\n        <br />\n        A straightforward music sequencer web app.\n        <br /> <br />\n        I offer various samples and beats for you to experiment with.\n        <br /> \n        Toggle notes by clicking on them, and press play to listen to your song.\n        <br /> <br />\n        Enjoy!<br /> <br /> In case that you like to have a conversation you can <br />{\" \"}\n        <br /> <strong> &nbsp; &nbsp; Connect with me: </strong>\n      </p>\n      <div>\n        <a href=\"https://github.com/samanmanesh\" target=\"_blank\" rel=\"noreferrer\">\n          <img src=\"icons/social-github.svg\" alt=\"github\" />\n        </a>\n      </div>\n      <div>\n        <a\n          href=\"https://www.linkedin.com/in/saman-manesh-96b257213/\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <img src=\"icons/social-linkedin.svg\" alt=\"linked in\" />\n        </a>\n      </div>\n      <div>\n        <a href=\"mailto:samanmanesh7@gmail.com\" target=\"_blank\" rel=\"noreferrer\">\n          <img src=\"icons/social-mail.svg\" alt=\"mail\" />\n        </a>\n      </div>\n      <div>\n        <a href=\"https://instagram.com/samansmanesh\" target=\"_blank\" rel=\"noreferrer\">\n          <img src=\"icons/social-instagram.svg\" alt=\"instagram\" />\n        </a>\n      </div>\n      <p>\n        Made by <strong>Saman Manesh</strong>{\" \"}\n      </p>\n    </ModalWrapper>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../styles\";\nimport useSong from \"../helpers/useSong\";\nimport Modal from \"./Modal\";\nimport { InstrumentType } from \"../helpers/instruments\";\nimport usePlay from \"../helpers/usePlay\";\nimport BpmModal from \"./BpmModal\";\nimport useClickOutside from \"../helpers/useClickOutside\";\nimport InfoModal from \"./InfoModal\";\n\n// #region - styling -\nconst Header = styled.div`\n  grid-area: playBar;\n  position: relative;\n  z-index: 10;\n  display: flex;\n  align-items: center;\n  padding: 0.5rem;\n\n  .info {\n    margin-right: 1rem;\n    margin-left: 10rem;\n    cursor: pointer;\n    position: relative;\n  }\n  .speed-bar-container {\n    color: #c4c2f0;\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n\n    & > div {\n      width: 1.5rem;\n      height: 1.5rem;\n      border-radius: 100%;\n      border: 2px solid ${colors.button.metronomeBorder};\n      :nth-child(2) {\n        margin-right: 1rem;\n        margin-left: 0.2rem;\n      }\n    }\n  }\n  & > p {\n    margin-left: 1.2rem;\n    font-size: 1.5ch;\n  }\n`;\nconst On = styled.div`\n  background: ${(props) =>\n    props.check === 0\n      ? colors.button.metronome\n      : colors.background.primaryDark};\n`;\n\nconst Off = styled.div`\n  background: ${(props) =>\n    props.check === 1\n      ? colors.button.metronome\n      : colors.background.primaryDark};\n`;\n\nconst ControlPanel = styled.div`\n  display: flex;\n  margin-left: auto;\n\n  margin-right: auto;\n  & > button {\n    all: unset;\n    cursor: pointer;\n    padding: 0.5rem;\n  }\n  & > span {\n    padding-top: 0.7rem;\n    margin-left: 0.5rem;\n  }\n`;\n\nconst AddTrack = styled.div`\n  padding: 0;\n  margin: 0;\n  cursor: pointer;\n  & > div {\n    display: flex;\n    justify-content: center;\n    background: ${colors.button.secondary};\n    border-radius: 0.4rem;\n    margin: 0.1rem 0 0.1rem 1rem;\n    width: 3rem;\n    height: 2rem;\n\n    & > button {\n      all: unset;\n    }\n  }\n`;\n// #endregion\n\nexport default function ControlBar() {\n  const { options} = useSong();\n  const { play, pause, on } = usePlay();\n  const [showModal, setShowModal] = useState(false);\n  const [isPlay, setIsPlay] = useState(false);\n  const [showBpmModal, setShowBpmModal] = useState(false);\n  const [showInfoModal, setShowInfoModal] = useState(false);\n\n  useEffect(() => {\n    if (isPlay) {\n      play();\n    } else {\n      pause();\n    }\n  }, [isPlay]);\n\n  let domNode = useClickOutside(() => {\n    setShowBpmModal(false);\n    setShowModal(false);\n    setShowInfoModal(false);\n  });\n\n  return (\n    <Header>\n      <AddTrack ref={domNode}>\n        <div onClick={() => setShowModal(InstrumentType.Beat)}>\n          <button>\n            <img src=\"icons/plus.svg\" alt=\"plus\" />\n          </button>\n        </div>\n      </AddTrack>\n      <p>New Track</p>\n      {showModal && (\n        <Modal showModal={showModal} setShowModal={setShowModal}></Modal>\n      )}\n\n      <ControlPanel>\n        <button onClick={() => setIsPlay((prev) => !prev)}>\n          <img\n            src={isPlay === true ? \"icons/stop.svg\" : \"icons/play.svg\"}\n            alt=\"play\"\n          />\n        </button>\n      </ControlPanel>\n\n      <div\n        className=\"speed-bar-container\"\n        onClick={() => (\n          setShowBpmModal((prev) => !prev) , setShowInfoModal(false)\n        )}\n        ref={domNode}\n      >\n        <On check={on}></On>\n        <Off check={on}></Off>\n\n        <span>\n          {Math.round(options.bps * 60)} BPM | {options.stepLength} BARS\n        </span>\n      </div>\n      {showBpmModal && <BpmModal />}\n\n      <div className=\"info\" onClick={() => setShowInfoModal((prev) => !prev)}>\n        <img src=\"icons/info.svg\" alt=\"info\" />\n        {showInfoModal && <InfoModal />}\n      </div>\n    </Header>\n  );\n}\n","import { MainProvider } from \"./MainContext\";\nimport { PlayProvider } from \"./contexts/PlayContext\";\nimport TrackPlayer from \"./components/TrackPlayer\";\nimport ControlBar from \"./components/ControlBar\";\nimport styled from \"styled-components\";\nimport colors from \"./styles\";\nimport { sizes } from \"./styles\";\nimport * as Tone from \"tone\";\n\nconst AppWrapper = styled.div`\n  color: white;\n  background: ${colors.background.primaryDark};\n  display: grid;\n  width: 100vw;\n  height: 100vh;\n\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-template-rows: ${sizes.headerHeight} auto;\n  grid-template-areas:\n    \"playBar playBar playBar playBar\"\n    \"body body body body\";\n`;\n\nconst FakeSidebar = styled.div`\n  width: 15rem;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 0;\n  background: ${colors.background.primaryDark};\n`;\nfunction App() {\n  const buffer = new Tone.ToneAudioBuffer(\"/Media/Clap.mp3\", () => {\n    console.log(\"loaded\");\n  });\n\n  \n  return (\n    <AppWrapper>\n      <MainProvider>\n        <PlayProvider>\n          <ControlBar />\n          <TrackPlayer />\n          <FakeSidebar />\n        </PlayProvider>\n      </MainProvider>\n    </AppWrapper>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}